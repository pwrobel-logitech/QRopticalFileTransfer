#extension GL_OES_EGL_image_external : require

precision highp float;

uniform float prev_yx_ratio;
uniform float succratio;
uniform mat4 uTransformM;
uniform mat4 uOrientationM;
uniform samplerExternalOES sTexture;
varying vec2 vTextureCoord;
uniform vec2 ratios;
float x, y, transx, transy, cx, cy , rs, red, green;
uniform float is_blur;
float distancefactor , distancefactorx, distancefactory;
float darkness;
float boundx, boundy;
vec4 texcolor, redf, greenf;
vec4 t00, t01, t10, t11;
vec4 sumcol;
vec4 Bmm, Bm0, Bmp, B0m, B00, B0p, Bpm, Bp0, Bpp;
uniform vec2 sizeprev;
uniform float prevsqr;
float nyb;
varying vec2 origpos;

void main(){
   x = vTextureCoord.x;
   y = vTextureCoord.y;
   if(prev_yx_ratio > 1.0 ){
      boundx = prevsqr;
      boundy = boundx/prev_yx_ratio;
   }else {
      boundy = prevsqr;
      boundx = boundy*prev_yx_ratio;
   }
   distancefactor = 1.0;
   darkness = 1.0;
   green = 0.0;
   red = 0.0;
   redf = vec4(0.0,0.0,0.0,0.0);
   greenf = vec4(0.0,0.0,0.0,0.0);
   texcolor = texture2D(sTexture, vec2(x,y));
if ((origpos.x < -boundx || origpos.x > boundx) || (origpos.y < -boundy || origpos.y > boundy)){
     darkness = 0.4;
            if(succratio < 0.5){
               green = 0.0;
               red = 2.0*(0.5 - succratio);
            }else {
               green = 2.0*(succratio - 0.5);
               red = 0.0;
            }
if (is_blur > 0.5){
             t00 = texture2D(sTexture, vec2(x-2.0/sizeprev.x,y-2.0/sizeprev.y));
             t01 = texture2D(sTexture, vec2(x-2.0/sizeprev.x,y+2.0/sizeprev.y));
             t10 = texture2D(sTexture, vec2(x+2.0/sizeprev.x,y-2.0/sizeprev.y));
             t11 = texture2D(sTexture, vec2(x+2.0/sizeprev.x,y+2.0/sizeprev.y));
             texcolor = (1.0/6.0)*(2.0*texcolor + t00 + t01 + t10 + t11);
}
             redf = red * (1.0-darkness)*texcolor;
             redf.y=0.0;
             redf.z = 0.0;
             greenf = green *(1.0-darkness)* texcolor;
             greenf.x = 0.0;
             greenf.z = 0.0;
   }
   gl_FragColor = redf  + greenf + darkness*texcolor;
}